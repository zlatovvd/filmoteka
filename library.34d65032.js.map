{"mappings":"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","sources":["src/library.js","src/StorageApi.js","<<jsx-config-pragma.js>>"],"sourcesContent":["'use strict';\n\nimport { movieApi } from './movieApi';\nimport { Pagination } from './Pagination';\nimport { StorageApi } from './StorageApi';\n\nconst postersPath = 'https://image.tmdb.org/t/p/w500';\n\nlet genres = null;\nlet perPage = 4;\nlet storageName = 'watched';\n\nconst dataApi = new movieApi();\nconst pagination = new Pagination();\nconst storageApi = new StorageApi();\n\nconst refs = {\n  filmotekaList: document.querySelector('.filmoteka-list'),\n  //queueBtn: document.querySelector('.queue-btn'),\n  btns: document.querySelector('.library-btn-wrapper'),\n  watchedBtn: document.querySelector('.watched-btn'),\n  paginationList: document.querySelector('.pagination-list'),\n};\n\nrefs.paginationList.addEventListener('click', handlePagination);\nrefs.btns.addEventListener('click', handleBtns);\n\nconst loadLibrary = async () => {\n  if (!genres) {\n    try {\n      genres = await dataApi.loadGenre();\n    } catch {\n      console.error(error);\n    }\n  }\n  const { result, totalPages, perPage, currentPage } =\n    storageApi.getData(storageName);\n  refs.filmotekaList.innerHTML = createMarkup(result);\n\n  console.log('total', totalPages);\n\n  if (totalPages > 1) {\n    refs.paginationList.innerHTML = pagination.creatPagination(\n      currentPage,\n      perPage,\n      totalPages\n    );\n  } else {\n    refs.paginationList.innerHTML = '';\n  }\n};\n\nconst createGenreStr = genre_ids => {\n  return genre_ids\n    .map(item => genres.find(option => option.id == item).name)\n    .join(', ');\n};\n\nfunction handleBtns(event) {\n  refs.watchedBtn.classList.remove('active');\n\n  if (event.target.classList.contains('queue-btn')) {\n    storageName = 'queue';\n  } else if (event.target.classList.contains('watched-btn')) {\n    storageName = 'watched';\n  }\n  storageApi.setPage(1);\n  loadLibrary();\n}\n\nfunction handlePagination(event) {\n  event.preventDefault();\n\n  if (event.target.classList.contains('pagination-link')) {\n    if (event.target.classList.contains('page-right')) {\n      storageApi.incrementPage();\n    } else if (event.target.classList.contains('page-left')) {\n      storageApi.decrementPage();\n    } else {\n      storageApi.setPage(Number(event.target.innerText));\n    }\n\n    loadLibrary();\n  }\n}\n\nconst createMarkup = data => {\n  return data\n    .map(\n      item =>\n        `<li class=\"filmoteka-item\" data-id=\"${item.id}\">\n            <a href=\">\n              <div class=\"filmoteka-thumb\">\n                  <img class=\"filmoteka-img\" src=\"${postersPath}${\n          item.poster_path\n        }\" alt=\"${item.overview}\" />\n              </div>\n            </a>\n            <h2 class=\"filmoteka-title\">${item.title.toUpperCase()}</h2>\n            <p class=\"filmoteka-discription\">${createGenreStr(\n              item.genre_ids\n            )} | ${new Date(item.release_date).getFullYear()}</p>\n          </li>`\n    )\n    .join('');\n};\n\nloadLibrary();\n","export class StorageApi {\n  data = [];\n  page = 1;\n  perPage = 4;\n  totalPages = 1;\n\n  getData(storageName) {\n    this.data = window.localStorage.getItem(storageName)\n      ? JSON.parse(window.localStorage.getItem(storageName))\n      : [];\n    this.totalPages = Math.ceil(this.data.length / this.perPage);\n\n    return {\n      result: this.data.slice(this.startElement(), this.endElement()),\n      totalPages: this.totalPages,\n      perPage: this.perPage,\n      currentPage: this.page,\n    };\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  decrementPage() {\n    this.page -= 1;\n  }\n\n  setPage(page) {\n    this.page = page;\n  }\n\n  getPage() {\n    return this.page;\n  }\n\n  startElement() {\n    return this.page * this.perPage - this.perPage;\n  }\n\n  endElement() {\n    let endElement = this.startElement() + this.perPage;\n    console.log('length', this.data.length);\n\n    if (this.startElement() + this.perPage > this.data.length) {\n      endElement = this.data.length;\n    }\n\n    return endElement;\n  }\n}\n",null],"names":["$bpxeT","parcelRequire","$8MBJY","$6f82449dd9837902$export$b6009135e679e76","StorageApi","$parcel$interopDefault","$hKHmD","this","key","storageName","data","window","localStorage","getItem","JSON","parse","totalPages","Math","ceil","length","perPage","result","slice","startElement","endElement","currentPage","page","endElement1","console","log","$cecbdd76f2d3d4bd$var$genres","$cecbdd76f2d3d4bd$var$storageName","$cecbdd76f2d3d4bd$var$dataApi","$6nMcK","movieApi","$cecbdd76f2d3d4bd$var$pagination","$3ohwy","Pagination","$cecbdd76f2d3d4bd$var$storageApi","$cecbdd76f2d3d4bd$var$refs","filmotekaList","document","querySelector","btns","watchedBtn","paginationList","addEventListener","event","preventDefault","target","classList","contains","incrementPage","decrementPage","setPage","Number","innerText","$cecbdd76f2d3d4bd$var$loadLibrary","remove","$2TvXO","mark","_callee","ref","perPage1","loadGenre","_ctx","sent","error","getData","innerHTML","$cecbdd76f2d3d4bd$var$createMarkup","creatPagination","map","item","concat","id","poster_path","overview","title","toUpperCase","genre_ids","find","option","name","join","Date","release_date","getFullYear"],"version":3,"file":"library.34d65032.js.map"}